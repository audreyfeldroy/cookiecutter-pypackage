[project]
name = "{{cookiecutter.pypi_package_name}}"
version = "{{ cookiecutter.first_version }}"
description = "{{cookiecutter.project_short_description}}"
readme = "README.md"
authors = [
  {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"}
]
maintainers = [
  {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"}
]
classifiers = [
    # TODO
]
license = {text = "MIT"}
dependencies = [
  "typer"
]
requires-python = ">= 3.10"

[dependency-groups]
dev = [
    "coverage", # testing
    "pytest", # testing
    "ruff", # linting
    "mypy", # checking types
    "ipdb", # debugging
    "nox", # orchestrating tests
    "pre-commit", # enforce standards
]
[project.urls]
bugs = "https://github.com/{{cookiecutter.__gh_slug}}/issues"
changelog = "https://github.com/{{cookiecutter.__gh_slug}}/blob/master/changelog.md"
homepage = "https://github.com/{{cookiecutter.__gh_slug}}"

[project.scripts]
{{cookiecutter.project_slug}} = "{{cookiecutter.project_slug}}.cli:app"

[tool.ty]
# All rules are enabled as "error" by default; no need to specify unless overriding.
# Example override: relax a rule for the entire project (uncomment if needed).
# rules.TY015 = "warn"  # For invalid-argument-type, warn instead of error.

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.uv]
package = true
