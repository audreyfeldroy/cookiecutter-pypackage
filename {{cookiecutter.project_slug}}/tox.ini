[tox]
envlist = clean, py{36,37,38}, report

[gh-actions]
python =
    3.6: py36, clean, report
    3.7: py37
    3.8: py38

[pytest]
norecursedirs = .git .ipynb_checkpoints .tox .allure-result .allure-report .htmlcov build dist


[coverage:run]
concurrency = multiprocessing
parallel = true


[coverage:paths]
source = src
         .tox/*/site-packages


[testenv]
setenv =
    VIRTUAL_ENV={envdir}
    PIP_DISABLE_VERSION_CHECK = 1
    ALLURE_RESULT_DIR = {toxinidir}/{env:ALLURE_RESULT_DIR:.allure-result}
    ALLURE_HTML_DIR = {toxinidir}/{env:ALLURE_HTML_DIR:.allure-report}
    SOURCE_DIR = {env:SOURCE_DIR:{{ cookiecutter.project_slug }}}
    COVERAGE_HTML_DIR = {toxinidir}/{env:COVERAGE_HTML_DIR:.htmlcov}
deps = -r{toxinidir}/requirements_dev.txt
depends =
    py{36,37,38}: clean
    report: py{36,37,38}
allowlist_externals =
    rm
    allure

[testenv:py{36,37,38}]
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxinidir}/.coverage.{envname}}
    {[testenv]setenv}
commands = pytest --cov {env:SOURCE_DIR} --alluredir={env:ALLURE_RESULT_DIR} --ignore={toxinidir}/tests/test_production.py {posargs}


[testenv:report]
skip_install = true
deps = coverage
commands =
    coverage combine
    coverage html --directory={env:COVERAGE_HTML_DIR}
    allure generate {env:ALLURE_RESULT_DIR} -o {env:ALLURE_HTML_DIR}
    coverage report


[testenv:clean]
skip_install = true
deps = coverage
commands =
    coverage erase
    rm -rf {env:ALLURE_RESULT_DIR}
    rm -rf {env:ALLURE_HTML_DIR}
    rm -rf {env:COVERAGE_HTML_DIR}
