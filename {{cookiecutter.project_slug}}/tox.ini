[tox]
envlist = clean, py26, py27, py34, py35, check, report{% if cookiecutter.include_sphinx_doc == 'y' %}, docs{% endif %}

[travis]
python =
    3.5: py35
    3.4: py34
    2.7: py27

[testenv]
# necessary to make cov find the .coverage file
# see http://blog.ionelmc.ro/2014/05/25/python-packaging/
usedevelop = true
setenv =
    PYTHONPATH = {toxinidir}
commands =
    # Just pytest without coverage
    # pytest --basetemp = {envtmpdir} tests
    # with coverage 
    # coverage run --source src -m pytest --basetemp={envtmpdir}
    # with pytest-cov 
    pytest --cov=src --cov-append --basetemp={envtmpdir} tests

deps =
    coverage
    -r{toxinidir}/requirements/test.txt
basepython =
    py35: python3.5
    py34: python3.4
    py33: python3.3
    py27: python2.7
    # https://blog.ionelmc.ro/2014/05/25/python-packaging/#ci-templates-tox-ini
    # https://hynek.me/articles/testing-packaging/
    {docs,spell}: python2.7
    {bootstrap,clean,check,report,extension-coveralls,coveralls,codecov}: python3


{% if cookiecutter.include_sphinx_doc == 'y' %}
[testenv:spell]
setenv =
    SPELLCHECK = 1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
usedevelop = false
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs: -E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
{% endif %}

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
usedevelop = false
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest  --ignore .idea,.idea/* {toxinidir}
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:report]
deps =
    coverage
    pytest
    pytest-cov
skip_install = true
usedevelop = true
commands =
    # TODO: coverage combine needs work
    # py.test --cov-report html
    # coverage combine --append
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = coverage

[pytest]
python_files = tests.py test_*.py *_tests.py
;addopts = -n auto
;addopts = -n8
testpaths = tests
python_classes = *Tests

[isort]
;known_first_party = {{ cookiecutter.package_name }}
known_localfolder = {{ cookiecutter.package_name }},test,tests,test_data
;forced_separate = {{ cookiecutter.package_name }}
default_section = FIRSTPARTY
line_length = 200
not_skip = __init__.py
;import_heading_stdlib = Standard Library
;import_heading_firstparty = My Stuff
;import_heading_localfolder = Local
