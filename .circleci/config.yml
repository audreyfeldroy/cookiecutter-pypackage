---
version: 2.1

commands:
  set_up_environment:
    description: "Install source environment"
    steps:
      - checkout
      - restore_cache:
          key: gems-v1-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          key: ruby-and-python-v2-{{ checksum "fix.sh" }}
      - run:
          name: Initialize packages
          command: |
            export BUNDLE_PATH=vendor/bundle
            './fix.sh'
      - save_cache:
          key: ruby-and-python-v2-{{ checksum "fix.sh" }}
          paths:
            - "/home/circleci/.pyenv"
            - "/home/circleci/.rbenv"
      - save_cache:
          key: gems-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - "vendor/bundle"
      - run:
          name: Download new circleci tool
          command: |
            curl -fLSs \
            https://raw.githubusercontent.com/CircleCI-Public/circleci-cli/master/install.sh | sudo bash
  overcommit:
    description: "Run overcommit"
    steps:
      - set_up_environment
      - run:
          name: Download new circleci tool
          command: |
            curl -fLSs \
            https://raw.githubusercontent.com/CircleCI-Public/circleci-cli/master/install.sh | sudo bash
      - run:
          name: Run overcommit
          command: |
            export PATH="${HOME}/.pyenv/bin:${PATH}"
            export PATH="${HOME}/.rbenv/bin:${HOME}/.rbenv/shims:${PATH}"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"
            eval "$(rbenv init -)"
            export BUNDLE_PATH=vendor/bundle
            # Coax overcommit into working
            git config --global user.email "test@test.test"
            git config --global user.name "Test Test"
            bundle exec overcommit --sign
            bundle exec overcommit --sign pre-commit

            bundle exec overcommit --run
          environment:
            # https://app.circleci.com/pipelines/github/apiology/cookiecutter-pypackage/4/workflows/29074dc8-944c-4600-8aaa-5116575fed90/jobs/4
            "LC_ALL": "C.UTF-8"
            "LANG": "C.UTF-8"
  tox:
    description: "Run tox"
    parameters:
      tox_arguments:
        type: string
        default: ''
        description: "Which tox arguments to pass"
    steps:
      - set_up_environment
      - run:
          name: Test
          command: |
            export PATH="${HOME}/.pyenv/bin:${PATH}"
            export PATH="${HOME}/.rbenv/bin:${HOME}/.rbenv/shims:${PATH}"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"
            eval "$(rbenv init -)"
            export BUNDLE_PATH=vendor/bundle
            # These will be used in post_gen_project.py while testing
            # the cookies, as well as by overcommit
            git config --global user.email "test@test.test"
            git config --global user.name "Test Test"
            # Coax overcommit into working
            bundle exec overcommit --sign
            bundle exec overcommit --sign pre-commit

            tox <<parameters.tox_arguments>>
          environment:
            # https://app.circleci.com/pipelines/github/apiology/cookiecutter-pypackage/4/workflows/29074dc8-944c-4600-8aaa-5116575fed90/jobs/4
            "LC_ALL": "C.UTF-8"
            "LANG": "C.UTF-8"

jobs:
  test:
    docker:
      - image: apiology/circleci-ruby:latest
    steps:
      - unless:
          condition:
            equal: [<< pipeline.git.branch >>, "main"]
          steps:
            - tox:
                tox_arguments: '-e py39'
      - when:
          condition:
            equal: [<< pipeline.git.branch >>, "main"]
          steps:
            - tox
  overcommit:
    docker:
      - image: apiology/circleci-ruby:latest
    steps:
      - when:
          condition:
            equal: [<< pipeline.git.branch >>, "main"]
          steps:
            - overcommit
      - unless:
          condition:
            equal: [<< pipeline.git.branch >>, "main"]
          steps:
            - run: echo "overcommit only runs on main branch"

workflows:
  version: 2
  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 6"
          filters:
            branches:
              only:
                - main
    jobs:
      - test
  overcommit:
    jobs:
      - overcommit
  test:
    jobs:
      - test
