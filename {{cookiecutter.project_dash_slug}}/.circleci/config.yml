version: 2

default: &steps
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python${PYTHONVERSION}/site-packages

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace

      - run: |
          mv workspace/src/* .
          rm -rf test-data
          mv workspace/test-data .

# https://discuss.circleci.com/t/cannot-use-circle-yml-environment-variables-in-cache-keys/10994/9
      - run: echo "$PYTHONVERSION" > _tmp_file
      - restore_cache:
          key: {{ cookiecutter.project_dash_slug  }}-{% raw %}{{ .Branch }}-{{ checksum "Pipfile.lock" }}-{{ checksum "_tmp_file" }}{% endraw %}

      - run:
          command: |
            cat Pipfile
            sudo pip install pipenv
            pipenv install

      - save_cache:
          key: {{ cookiecutter.project_dash_slug  }}-{% raw %}{{ .Branch }}-{{ checksum "Pipfile.lock" }}-{{ checksum "_tmp_file" }}{% endraw %}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python${PYTHONVERSION}/site-packages"

      - run:
          command: |
            cat > move_results.py <<'EOF'
            """Circle Ci structures the test report on the artifact page
            using the directory structure of the test results.
            The xml files created by the xmlrunner are all in the same folder
            with the package structure reflected in '.'s in the file name.
            We move the files around to beautify the test reporting."""
            import errno
            import os
            from glob import glob

            for test_result in glob('TEST-*.xml'):
                # e.g. TEST-tests.kb_lint_test.test_diff.ClassChangesTest-20180919121134.xml
                parts = test_result.split('.')
                # e.g. ['TEST-tests', 'kb_lint_test', 'test_diff',
                #        'ClassChangesTest-20180919121134', 'xml']
                folder = os.path.join('test-reports', *parts[1:-2])
                # e.g ['kb_lint_test', 'test_diff']

                try:
                    os.makedirs(folder)
                except OSError as e:
                    if e.errno != errno.EEXIST:
                        raise
                os.rename(test_result, os.path.join(folder, '%s.xml' % parts[-2]))

            EOF
            mkdir test-reports
            save() {
              python move_results.py
            }
            # call save whether or not the test run succeeds
            pipenv run python -m xmlrunner discover -s tests -t . -p '*.py' || (save && false)
            save

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

jobs:
  build:
    docker:

{%- if cookiecutter.python_2_7|lower == 'yes' %}
      - image: circleci/python:2.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
          PYTHONVERSION: 2.7

{%- else %}
      - image: circleci/python:3.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
          PYTHONVERSION: 3.6

{%- endif %}

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python${PYTHONVERSION}/site-packages
      - restore_cache:
          key: {{ cookiecutter.project_dash_slug  }}-{% raw %}{{ .Branch }}-{{ checksum "Pipfile.lock" }}-build{% endraw %}

      - run:
          command: |
            sudo pip install pipenv
            pipenv install

      - save_cache:
          key: {{ cookiecutter.project_dash_slug  }}-{% raw %}{{ .Branch }}-{{ checksum "Pipfile.lock" }}-build{% endraw %}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python${PYTHONVERSION}/site-packages"

      - run:
          command: |
            pipenv run python setup.py sdist
            mkdir -p /tmp/workspace/src
            mv test-data /tmp/workspace
            mv dist /tmp/workspace

      - run:
          command: |
            # Not removing .venv
            mv Pipfile Pipfile.lock /tmp/workspace
            rm -rf *
            tar xzf /tmp/workspace/dist/{{ cookiecutter.project_dash_slug  }}*.tar.gz
            mv {{ cookiecutter.project_dash_slug  }}*/* .
            mv /tmp/workspace/{Pipfile,Pipfile.lock} .
            pipenv install -e .
            rm -rf .venv
            cat -n Pipfile
            sed -i -e /^python_version/d Pipfile
            cat -n Pipfile
            mv * /tmp/workspace/src

      - persist_to_workspace:
           root: /tmp/workspace
           paths:
            - test-data
            - dist
            - src

  test37:
    docker:
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
          PYTHONVERSION: 3.7

    steps: *steps


  test36:
    docker:
      - image: circleci/python:3.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
          PYTHONVERSION: 3.6

    steps: *steps

{%- if cookiecutter.python_2_7|lower == 'yes' %}

  test27:
    docker:
      - image: circleci/python:2.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
          PYTHONVERSION: 2.7

    steps: *steps
{% endif %}

  release:
    docker:
      - image: circleci/ruby:2.5

    steps:
      - attach_workspace:
          at: workspace

      - run: env
      - run: gem install package_cloud
      - run: package_cloud push syapse/General/python/sdist workspace/dist/{{ cookiecutter.project_dash_slug  }}*.tar.gz

workflows:
  version: 2
  test_and_release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
{% if cookiecutter.python_2_7|lower == 'yes' %}
      - test27:
          requires:
          - build
          filters:
            tags:
              only: /.*/
 {%- endif %}
      - test36:
          requires:
          - build
          filters:
            tags:
              only: /.*/
      - test37:
          requires:
          - build
          filters:
            tags:
              only: /.*/

      - release:
          context: PACKAGECLOUD
          requires:
            {%- if cookiecutter.python_2_7|lower == 'yes' %}
            - test27{%- endif %}
            - test36
            - test37
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
