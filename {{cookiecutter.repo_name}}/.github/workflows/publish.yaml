name: Publishing

on:
    release:
        types:
            - created

jobs:
{% if cookiecutter.publish_to_pypi == 'True' -%}
    pypi-publish:
        name:    PyPI
        runs-on: ubuntu-latest
        steps:
            -   name: Check out the repository
                uses: actions/checkout@v3
                with:
                    fetch-depth: 2
            -   name: Set up Python
                uses: actions/setup-python@v3
                with:
                    python-version: "3.9"
            -   name: Upgrade pip
                run:  |
                      pip install --upgrade pip
                      pip --version
            -   name: Install Poetry
                run:  |
                      pip install poetry
                      poetry --version
            -   name: Build package
                run:  |
                      poetry build --ansi
            -   name: Publish package on PyPI
                if:   false
                uses: pypa/gh-action-pypi-publish@v1.5.0
                with:
                    user: __token__
                    password: ${{"{{"}} secrets.PYPI_TOKEN {{"}}"}}
{% endif %}
{% if cookiecutter.publish_to_docker_hub == 'True' -%}
    docker-hub-publish:
        name:    docker-hub
        runs-on: ubuntu-latest
        steps:
            -   name: Check out the repository
                uses: actions/checkout@v3
                with:
                    fetch-depth: 2
            -   name: Set up QEMU
                if:   steps.check-version.outputs.tag
                uses: docker/setup-qemu-action@v1
            -   name: Set up Docker Buildx
                if:   steps.check-version.outputs.tag
                uses: docker/setup-buildx-action@v1
            -   name: Login to DockerHub
                if:   steps.check-version.outputs.tag
                uses: docker/login-action@v1
                with:
                    username: ${{"{{"}} secrets.DOCKER_USERNAME {{"}}"}}
                    password: ${{"{{"}} secrets.DOCKER_PASSWORD {{"}}"}}
            -   name: Declare Version Variable
                if:   steps.check-version.outputs.tag
                run:  |
                      PACKAGE_VERSION=$(poetry version --short)
                      PACKAGE_NAME=$(poetry version | awk '{ print $1 }')
                      echo PACKAGE_VERSION=${PACKAGE_VERSION} >> $GITHUB_ENV
                      echo PACKAGE_NAME=${PACKAGE_NAME} >> $GITHUB_ENV
            -   name: Docker Image Building and Publishing
                id:   docker_build
                uses: docker/build-push-action@v2
                with:
                    push: false
                    tags: {{ cookiecutter.github_username }}/${{"{{"}} env.PACKAGE_NAME {{"}}"}}:latest,{{ cookiecutter.github_username }}/${{"{{"}} env.PACKAGE_NAME {{"}}"}}:${{"{{"}} env.PACKAGE_VERSION {{"}}"}}
{% endif %}
