name: {{cookiecutter.project_name}} CI

on:
  push:
    branches: [ main ]
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9' ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -e .[tests]

      - name: Run tests
        run: pytest tests --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
          directory: ./coverage/reports/
          env_vars: OS, PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true

  deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Setup deploy
        run: |
          pip install --upgrade setuptools wheel twine
          python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: {% raw %}${{ secrets.PYPI_API_TOKEN }}{% endraw %}
          verbose: true

      - name: Github Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_COMPRESS: xz
          GHR_PATH: build/
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
